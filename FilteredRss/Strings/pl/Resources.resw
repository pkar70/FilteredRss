<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_lang" xml:space="preserve">
    <value>Polish</value>
  </data>
  <data name="resSettings.Text" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="resFeeds.Header" xml:space="preserve">
    <value>Feed:</value>
  </data>
  <data name="resFeeds.PlaceholderText" xml:space="preserve">
    <value>(wprowadź feed, każdy w osobnej linii)</value>
  </data>
  <data name="resFeedsRoam.OffContent" xml:space="preserve">
    <value>zapisz lokalnie</value>
  </data>
  <data name="resFeedsRoam.OnContent" xml:space="preserve">
    <value>wyślij do chmury</value>
  </data>
  <data name="resBlackList.Header" xml:space="preserve">
    <value>Lista fraz do zignorowania:</value>
  </data>
  <data name="resBlackList.PlaceholderText" xml:space="preserve">
    <value>(wprowadź słowa/frazy/regexp, każde w oddzielnej linii)</value>
  </data>
  <data name="resBlackRoam.OffContent" xml:space="preserve">
    <value>zapisz lokalnie</value>
  </data>
  <data name="resBlackRoam.OnContent" xml:space="preserve">
    <value>wyślij do chmury</value>
  </data>
  <data name="resWhiteList.Header" xml:space="preserve">
    <value>Lista ważnych fraz:</value>
  </data>
  <data name="resWhiteList.PlaceholderText" xml:space="preserve">
    <value>(wprowadź słowa/frazy/regexp, każde w oddzielnej linii)</value>
  </data>
  <data name="resWhiteRoam.OffContent" xml:space="preserve">
    <value>zapisz lokalnie</value>
  </data>
  <data name="resWhiteRoam.OnContent" xml:space="preserve">
    <value>wyślij do chmury</value>
  </data>
  <data name="resLinksActive.OffContent" xml:space="preserve">
    <value>nie zmieniaj linków</value>
  </data>
  <data name="resLinksActive.OnContent" xml:space="preserve">
    <value>Zamień http:// na linki</value>
  </data>
  <data name="resLinksActive.Header" xml:space="preserve">
    <value>Inne ustawienia:</value>
  </data>
  <data name="resNotifyWhite.OffContent" xml:space="preserve">
    <value>powiadomienia wyłączone</value>
  </data>
  <data name="resNotifyWhite.OnContent" xml:space="preserve">
    <value>Powiadamiaj mnie o postach</value>
  </data>
  <data name="resTimeInterval.Header" xml:space="preserve">
    <value>Co ile minut wczytać nowe posty</value>
  </data>
  <data name="resSettOk.Content" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="resRefresh.Label" xml:space="preserve">
    <value>Wczytaj</value>
  </data>
  <data name="resClockRead.Label" xml:space="preserve">
    <value>Samoczytaj</value>
  </data>
  <data name="resShowSettings.Label" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="resHelp.Label" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="resAboutRate.Label" xml:space="preserve">
    <value>Oceń</value>
  </data>
  <data name="resAboutFeed.Label" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="resSettRegExp.Label" xml:space="preserve">
    <value>Testowanie regexp</value>
  </data>
  <data name="resRegExpHdr.Text" xml:space="preserve">
    <value>Testowarka 'wyrażeń regularnych'</value>
  </data>
  <data name="resTRregexp.Header" xml:space="preserve">
    <value>Wyrażenie regularne:</value>
  </data>
  <data name="resTRregexp.PlaceholderText" xml:space="preserve">
    <value>(Wprowadź regexp)</value>
  </data>
  <data name="resTRtext1.Header" xml:space="preserve">
    <value>Przykładowe teksty:</value>
  </data>
  <data name="resTRtext1.PlaceholderText" xml:space="preserve">
    <value>(wprowadź jakąś frazę)</value>
  </data>
  <data name="resTRtext2.PlaceholderText" xml:space="preserve">
    <value>(wprowadź jakąś frazę)</value>
  </data>
  <data name="resTRtext3.PlaceholderText" xml:space="preserve">
    <value>(wprowadź jakąś frazę)</value>
  </data>
  <data name="resMaxDays.Header" xml:space="preserve">
    <value>Ignoruj starsze niż</value>
  </data>
  <data name="resMaxDays30.Content" xml:space="preserve">
    <value>miesiąc</value>
  </data>
  <data name="resMaxDays365.Content" xml:space="preserve">
    <value>rok</value>
  </data>
  <data name="resMaxDays7.Content" xml:space="preserve">
    <value>tydzień</value>
  </data>
  <data name="resBrowser" xml:space="preserve">
    <value>Browser</value>
  </data>
  <data name="resDelete" xml:space="preserve">
    <value>Usuń</value>
  </data>
  <data name="resOpen" xml:space="preserve">
    <value>Pokaż</value>
  </data>
  <data name="resErrorReadingXML" xml:space="preserve">
    <value>Błąd wczytywania danych XML</value>
  </data>
  <data name="resRenameFeed.Label" xml:space="preserve">
    <value>Nazwy feed</value>
  </data>
  <data name="resRenameTitle" xml:space="preserve">
    <value>Nazwy feed</value>
  </data>
  <data name="msgCacheCleared" xml:space="preserve">
    <value>Cache wyczyszczony</value>
  </data>
  <data name="resClearCache.Label" xml:space="preserve">
    <value>Czyść cache</value>
  </data>
  <data name="msgDelAllFromThisFeed" xml:space="preserve">
    <value>Usunąć wszystko z tego feed?</value>
  </data>
  <data name="msgSubjectToRemove" xml:space="preserve">
    <value>Podaj fragment Tytułu do usuwania</value>
  </data>
  <data name="resDlgCancel" xml:space="preserve">
    <value>Jednak nie</value>
  </data>
  <data name="resDlgContinue" xml:space="preserve">
    <value>Wykonaj</value>
  </data>
  <data name="resDlgNo" xml:space="preserve">
    <value>Nie</value>
  </data>
  <data name="resDlgYes" xml:space="preserve">
    <value>Tak</value>
  </data>
  <data name="msgKillFile14days" xml:space="preserve">
    <value>Filtr (wyrażenie regularne), ważne 14 dni:</value>
  </data>
  <data name="uiKillFile.Text" xml:space="preserve">
    <value>Dodaj do filtrów</value>
  </data>
  <data name="resNewFeed" xml:space="preserve">
    <value>Podaj Uri nowego feed</value>
  </data>
  <data name="resToastType0" xml:space="preserve">
    <value>Bez toast</value>
  </data>
  <data name="resToastType1" xml:space="preserve">
    <value>Info że coś jest</value>
  </data>
  <data name="resToastType2" xml:space="preserve">
    <value>Lista nowych</value>
  </data>
  <data name="resToastType3" xml:space="preserve">
    <value>Oddzielne</value>
  </data>
  <data name="uiCBtypToastu0.Text" xml:space="preserve">
    <value>Bez toast</value>
  </data>
  <data name="uiCBtypToastu1.Text" xml:space="preserve">
    <value>Info że coś jest</value>
  </data>
  <data name="uiCBtypToastu2.Text" xml:space="preserve">
    <value>Lista nowych</value>
  </data>
  <data name="uiCBtypToastu3.Text" xml:space="preserve">
    <value>Oddzielne</value>
  </data>
  <data name="resNewItemsInFeed" xml:space="preserve">
    <value>Nowe elementy w feed</value>
  </data>
  <data name="resNewItemsList" xml:space="preserve">
    <value>Lista nowych</value>
  </data>
  <data name="uiEditGlobalWhiteBlack.Content" xml:space="preserve">
    <value>Listy ogólne</value>
  </data>
  <data name="uiEditWhiteBlack.Text" xml:space="preserve">
    <value>Edycja black/white list</value>
  </data>
  <data name="msgWhiteBlackChanged" xml:space="preserve">
    <value>Zmieniono White/BlackList, zapisać je?</value>
  </data>
  <data name="uiGoWeb.Text" xml:space="preserve">
    <value>Otwórz w przeglądarce</value>
  </data>
  <data name="uiResetSeen.Text" xml:space="preserve">
    <value>Reset Feed</value>
  </data>
  <data name="resSetMaxDays30.Text" xml:space="preserve">
    <value>Ustaw miesiąc</value>
  </data>
  <data name="resSetMaxDays365.Text" xml:space="preserve">
    <value>Ustaw rok</value>
  </data>
  <data name="resSetMaxDays7.Text" xml:space="preserve">
    <value>Ustaw tydzień</value>
  </data>
  <data name="uiLastBylError.ToolTipService.ToolTip" xml:space="preserve">
    <value>Ostatnio był błąd</value>
  </data>
  <data name="uiToastType.ToolTipService.ToolTip" xml:space="preserve">
    <value>Typ powiadomienia Toast</value>
  </data>
  <data name="uiDelDoTego.Text" xml:space="preserve">
    <value>Usuń powyższe</value>
  </data>
  <data name="uiDelFeed.Text" xml:space="preserve">
    <value>Usuń z tego feed</value>
  </data>
  <data name="uiDelSubject.Text" xml:space="preserve">
    <value>Usuń wg tytułu</value>
  </data>
  <data name="uiDelThis.Text" xml:space="preserve">
    <value>Usuń ten</value>
  </data>
</root>